<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_baddie1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>spr_collision_cube</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//just things that are different from generic enemy parent.
icon_sprite = spr_baddie1;
hp = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//act_state.active

//If dead, skip this creature's turn
if hp &lt;= 0
    {
    current_act_state = act_state.inactive;
    exit;
    }

//If right next to the player, attack
//CHANGES NEEDED: This is a hacky method of doing attack detection
if point_distance(x,y,obj_hero.x,obj_hero.y) &lt;= 32
    {
    current_act_state = act_state.attack_resolve;
    timer = 15;
    exit;
    }

//Determine if the difference in x or y coordinate of this creature and the player is larger.  If blocked from "optimal path", use default parent's wandering AI.
//CHANGES NEEDED: Doesn't properly detect if both x/y are blocked before resorting to randomness.
if abs(x-obj_hero.x) &gt; abs(y-obj_hero.y)
    {
    if place_empty(x+32*sign(obj_hero.x-x),y)
        {
        x += 32*sign(obj_hero.x-x);
        current_act_state = act_state.move_resolve;
        }
    else
        {
        event_inherited();
        }
    
    }
else
    {
    if place_empty(x,y+32*sign(obj_hero.y-y))
        {
        y += 32*sign(obj_hero.y-y);
        current_act_state = act_state.move_resolve;
        }
    else
        {
        event_inherited();
        }
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
